Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Network Configuration"
        Parameters:
          - VPCCIDR
          - PublicSubnet1CIDR
      - Label:
          default: "Ec2 config"
        Parameters: 
          - EC2Key 
    ParameterLabels:
      VPCCIDR:
        default: "What is the VPC CIDR Block?"
      PublicSubnet1CIDR:
        default: "What is the Subnet CIDR Block?"
      EC2Key: 
        default: "EC2 Key pair to be used?"     
    

Parameters:
  VPCCIDR:
    Description: VPC CIDR Block
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.0.0/16
  PublicSubnet1CIDR:
    Description: Subnet CIDR Block
    Type: String
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 10.0.1.0/24
  EC2Key:
     Description: AWS EC2 key to login
     Type: AWS::EC2::KeyPair::KeyName

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VPCCIDR
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
      - Key: "Name"
        Value: "demo-vpc-cf"
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "demo-rt-cf"
  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
       Tags:
         - Key: "Name"
           Value: "demo-igw-cf"
  IGWA:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC
  RouteRTIGW:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: "0.0.0.0/0"
      GatewayId: !Ref IGW
      RouteTableId: !Ref RouteTable
      
  PublicSubenet1:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Sub '${AWS::Region}a'
      CidrBlock: !Ref PublicSubnet1CIDR
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: "Name"
          Value: "demo-public-subnet-1-cf"
  SubnetRTAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref RouteTable
      SubnetId: !Ref PublicSubenet1
  SG:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: "Public Security Group To my Desk"
      GroupName: demo-sg-1
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  EC2Instance1:
   Type: AWS::EC2::Instance
   Properties:
     AvailabilityZone: !Sub '${AWS::Region}a'
     ImageId: ami-0745d55d209ff6afd
     KeyName: !Ref EC2Key
     InstanceType: t2.micro
     SubnetId: !Ref PublicSubenet1
#     SecurityGroups:
#       - !Ref SG
     Tags:
       - Key: "Name"
         Value: "demo-ec2-cf"